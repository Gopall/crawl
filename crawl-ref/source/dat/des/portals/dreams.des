##############################################################################
#
# The realm of dreams! (aMcNicky)
#
# A visit here is the player's reward for using the dreamshard necklace.
#
# The twofold intentions of the portal are:
# 1. to give the player a somewhat safer on-demand (but one-time use) portal
#    that they can step into as a very strong 2-turn escape like a ziggurine.
# 2. to provide an good level of loot (less than a trove, more than the
#    average shop) as an additional pay-off.
#
# Slow moving monsters are included, along with a series of transformations,
# mainly for flavour, but also to keep the action moving and ideally make
# the player choose which items to take with them rather than a no brainer
# of 'pick it all up and figure it out later'
#
# Please feel free to add more dreams in line with these principles!
#
##############################################################################
# TODO: add dream maps, perhaps with some new transformations.


default-depth: Dreams

{{
function dreams_setup(e)
    e.tags("no_dump no_trap_gen allow_dup no_monster_gen")
    e.orient("encompass")
    e.kfeat("< = exit_dreams")
end

function hall_of_blades_monsters_dreams(e)
    e.mons("deep elf pyromancer att:neutral")
    e.mons("deep elf knight att:neutral w:22")
    e.mons("deep elf blademaster att:neutral")
    e.mons("dancing weapon att:neutral ;")
    hall_of_blades_weapon_dreams(e)
end

function hall_of_blades_weapon_dreams(e)
  local long_blade_type = crawl.one_chance_in(2) and "double sword"
                                                  or "triple sword"
  local types = {"quick blade", long_blade_type,
                 "executioner's axe", "eveningstar", "bardiche",
                 "lajatang"}
  local egos = {"flaming", "freezing", "electrocution", "venom",
              "holy_wrath", "pain", "vampirism", "draining",
              "antimagic", "distortion"}
  local weapon1 = util.random_from(types)
  local weapon2 = weapon1
  while weapon2 == weapon1 do
    weapon2 = util.random_from(types)
  end
  local ego1 = util.random_from(egos)
  local ego2 = ego1
  while ego2 == ego1 do
    ego2 = util.random_from(egos)
  end

  e.mons("dancing weapon att:neutral; good_item " .. weapon1 .. " ego:" .. ego1)
  e.mons("dancing weapon att:neutral; good_item " .. weapon2 .. " ego:" .. ego2)
end

function ice_cave_appearance_dreams(e)
    -- Alter short feature descriptions for all ice cave destination vaults.
    e.set_feature_name("rock_wall", "ice covered rock wall")
    e.set_feature_name("stone_arch", "ice choked empty arch of ancient stone")
    e.set_feature_name("shallow_water", "Some ice crusted shallow water")
    e.set_feature_name("deep_water", "Some ice crusted deep water")
    e.colour("a = white")
    e.kfeat("a = x")
    e.rtile("a = wall_ice_block")
    e.colour(".1234 = blue")
    e.ftile(".12345O+^ = floor_ice")
end
}}

NAME: amcnicky_dreams_1
: dreams_setup(_G)
TAGS: allow_dup generate_awake no_item_gen
DESC: fluttering gently through an ogre-filled clearing
DEPTH: Dreams:1
LFLOORTILE: floor_dirt
KMONS: 0 = ogre catcher
SUBST: 0 = 0.
MAP
0ttttttttttttttttttttttt
0.tttttt|tt|t|tt|ttttt.|
0..t.....tt...tt.tttt...
0..<.............ttt..<.
0..A..................}.
0................ttt....
0..t.....tt...tt.tttt...
0.tttttt|tt|t|tt|ttttt.|
0ttttttttttttttttttttttt
ENDMAP

NAME: amcnicky_dreams_2
: dreams_setup(_G)
TAGS: allow_dup generate_awake no_item_gen
DESC: sprinting, squealing through a spriggan restaurant
DEPTH: Dreams:2
KMONS: 0 = human col:red name:butcher n_suf ; robe . quick blade
KMONS: 1 = human col:white name:diner n_suf ; robe . dagger
NSUBST: K = 2:| / 2:* / *:.
MAP
v..1...1......1....1...v
v.mmmmmmmmmmmmmmmmmmmm.v
v.m0..{<...........K<m.v
v.mmmmmmmmmmmmmmm.mmmm1v
v.mK.....KKK.m..m.m1...v
v1mK.........mmmm.m.vvvv
v.mK..............m.vvvv
v.mK}........mmmm.m.vvvv
v.mK.........m..m.m.vvvv
v1mK.........m1.mKm.vvvv
v.mK.KKK...<.m..m<m.vvvv
v.mmmmmmmmmmmm..mmm.vvvv
v...1..........1....vvvv
vvvvvvvvvvvvvvvvvvvvvvvv
ENDMAP

NAME: amcnicky_dreams_3_hall_of_blades_hangedman_original
: dreams_setup(_G)
: hall_of_blades_monsters_dreams(_G)
TAGS: allow_dup
DESC: floating aimlessly through the hall of blades
DEPTH: Dreams:3
SHUFFLE:  CD / CD / DC / DC / DD
SUBST:    C = c, D = ., E : c--, F : c--, c : cv
FTILE:    - = floor_vault
COLOUR:   - = lightgrey
SUBST:    - = .
NSUBST:   . = 6=1 / 3=2 / 34 / 4=4 / 2=42 / 6=14...
MAP
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xcccccccccccccccccccccccccccccx
xcccc-cccc-F-ccccc-F-cccc-ccccx
x-cc-.-cc-...-ccc-...-cc-.-cc-x
x.............<.<.............x
x..--c--....|..}..|.....-c--..x
x..-ccc-...............-ccc-..x
x..ccccc...............ccccc..x
x..-ccc-...............-ccc-..x
x..--c--...............--c--..x
x.............................x
x.............................x
x.............D|D.............x
x............DDDDD............x
x............DDDDD............x
x............DDDDD............x
x.............D|D.............x
x.............................x
x.............................x
x..--c--...............--c--..x
x..-ccc-...............-ccc-..x
x..ccccc...............ccccc..x
x..-ccc-...............-ccc-..x
x..--c--...............--c--..x
x..............{..............x
x-cc-.-cc'''''ccc'''''cc-.-cc-x
xcccc-cccc'F'++c++'F'cccc-ccccx
xcccccccccccccccccccccccccccccx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ENDMAP

NAME: amcnicky_dreams_4_inside_brain
: dreams_setup(_G)
DEPTH: Dreams:4
DESC: feasting on brain matter
KFEAT: J = rock_wall
KFEAT: L = rock_wall
KITEM: B = acquire book / acquire:sif_muna book / any book
FTILE: K = floor_nerves
TILE: J = wall_pebble_red
TILE: L = wall_flesh
NSUBST: K = 4:B / *:K
MAP
...LLLLLLLLL..
.LLLKKK}KKKLL.
LLKKKKKJKKKKLL
LKKKKK<JKKKKKL
LLKKJJJJKKKKLL
LLKKKKKJJJJKKL
LKKKKKKJKKKKKL
LKKKKKKJKKKKKL
LLKKKKKJKKKKKL
LLKKKJJJJJKKKL
LKKKKKKJKKKKLL
LLKKKKKJKKKKLL
.LLKKKK{KKKKKL
..LLLLLLLLLLLL
ENDMAP

NAME: amcnicky_final_dream_1_ice_cave
: ice_cave_appearance_dreams(_G)
: dreams_setup(_G)
DEPTH: Dreams:5
DESC: saying goodbye to the icecaves of home
LFLOORTILE: floor_ice
KMONS: J = orb_of_fire name:orb_of_ice n_rpl n_des spells:glaciate.80.magical col:lightblue tile:mons_orb_of_ice
NSUBST: K = 2:| / 2:* / *:.
{{
lua_marker("+", portal_desc { iron_doors=1,
                            door_open_prompt=
                            "Your father turns to you and says,\n"
                            .. "\"My dearest child, you've never really\n"
                            .. " fit in around here much, but I'm ever so.\n"
                            .. " proud of you. Go now, and give them hell!\"\n"
                            .. "Proceed?" })
}}

MAP
aaaaaaaaaaaaaa
{.........aaaa
aaaaa......aaa
aaaaaa.....aaa
aaaaaaaaa...aa
aaaaaaaaa..aaa
a<aaaaaaa.aaaa
a+a.aaaaa...aa
a.mJ.aaaa..aaa
a.a.aa.....aaa
a.aaa....KKKaa
a.aaa....KKKKa
a........KKKKa
aaaaaaaaaaaaaa
ENDMAP


# todo: final vault
# todo: noise on entry
# todo: lots of vault balance
# todo: lots of item balance (evocable based on skill feels bad - base it on xp gained?)